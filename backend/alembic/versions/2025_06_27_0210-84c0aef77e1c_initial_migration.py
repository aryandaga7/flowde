"""initial_migration

Revision ID: 84c0aef77e1c
Revises: 
Create Date: 2025-06-27 02:10:04.433107+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84c0aef77e1c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('edges', sa.Column('edge_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('edges', sa.Column('label', sa.String(), nullable=True))
    op.add_column('edges', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('edges', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('edges', 'session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('edges', 'source_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('edges', 'target_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('edges', 'edge_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint('unique_edge_per_session', 'edges', ['session_id', 'source_id', 'target_id'])
    op.drop_constraint(op.f('edges_source_id_fkey'), 'edges', type_='foreignkey')
    op.drop_constraint(op.f('edges_target_id_fkey'), 'edges', type_='foreignkey')
    op.create_foreign_key(None, 'edges', 'nodes', ['source_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'edges', 'nodes', ['target_id'], ['id'], ondelete='CASCADE')
    op.add_column('idea_messages', sa.Column('message_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('idea_messages', 'session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('idea_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('idea_sessions', sa.Column('status', sa.Enum('DRAFT', 'IN_PROGRESS', 'COMPLETED', name='sessionstatus'), nullable=False))
    op.add_column('idea_sessions', sa.Column('session_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('idea_sessions', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('idea_sessions', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('idea_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('nodes', sa.Column('node_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('nodes', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('nodes', 'session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('nodes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('nodes_parent_id_fkey'), 'nodes', type_='foreignkey')
    op.drop_column('nodes', 'parent_id')
    op.drop_column('nodes', 'details')
    op.add_column('spec_changes', sa.Column('spec_markdown', sa.Text(), nullable=False))
    op.add_column('spec_changes', sa.Column('change_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('spec_changes', 'session_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('spec_changes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('spec_changes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('spec_changes', 'session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('spec_changes', 'change_data')
    op.drop_column('spec_changes', 'spec_markdown')
    op.add_column('nodes', sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('nodes', sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('nodes_parent_id_fkey'), 'nodes', 'nodes', ['parent_id'], ['id'], ondelete='CASCADE')
    op.alter_column('nodes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('nodes', 'session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('nodes', 'updated_at')
    op.drop_column('nodes', 'node_data')
    op.alter_column('idea_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('idea_sessions', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('idea_sessions', 'updated_at')
    op.drop_column('idea_sessions', 'session_data')
    op.drop_column('idea_sessions', 'status')
    op.alter_column('idea_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('idea_messages', 'session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('idea_messages', 'message_data')
    op.drop_constraint(None, 'edges', type_='foreignkey')
    op.drop_constraint(None, 'edges', type_='foreignkey')
    op.create_foreign_key(op.f('edges_target_id_fkey'), 'edges', 'nodes', ['target_id'], ['id'])
    op.create_foreign_key(op.f('edges_source_id_fkey'), 'edges', 'nodes', ['source_id'], ['id'])
    op.drop_constraint('unique_edge_per_session', 'edges', type_='unique')
    op.alter_column('edges', 'edge_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('edges', 'target_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('edges', 'source_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('edges', 'session_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('edges', 'updated_at')
    op.drop_column('edges', 'created_at')
    op.drop_column('edges', 'label')
    op.drop_column('edges', 'edge_data')
    # ### end Alembic commands ###
